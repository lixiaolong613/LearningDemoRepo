plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'base'
//    id 'kotlin-android-extensions'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.madslearning"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        missingDimensionStrategy("api", "minApi24")
//        missingDimensionStrategy("version", "demo")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix  ".debug"
            debuggable true
        }
        staging {
            initWith debug
            applicationIdSuffix ".debugStaging"
        }
    }

//    variantFilter { variant ->
//        def names = variant.flavors*.name
//        // To check for a certain build type, use variant.buildType.name == "<buildType>"
//        if (names.contains("minApi23") && names.contains("demo")) {
//            // Gradle ignores any variants that satisfy the conditions above.
//            setIgnore(true)
//        }
//    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    //为了能够使用ViewBinding
    viewBinding{
        enabled = true
    }
    dynamicFeatures = [':demoDynamicFeature', ':DemoFeature2']
}

configurations {

}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //以下以来是为了使用DiskLRUCache
    implementation 'com.jakewharton:disklrucache:2.0.2'

    //以下依赖是为了使用RxJava【在AppExecute中用到了observable】
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    //以下依赖是为了使用recycleView
    implementation "androidx.recyclerview:recyclerview:1.2.1"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
    implementation 'com.drakeet.multitype:multitype:4.2.0'

    //以下依赖是为了使用Fresco
    implementation 'com.facebook.fresco:fresco:2.6.0'
//    // 在 API < 14 上的机器支持 WebP 时，需要添加
//    implementation 'com.facebook.fresco:animated-base-support:0.12.0'
//    // 支持 GIF 动图，需要添加
//    implementation 'com.facebook.fresco:animated-gif:0.12.0'
//    // 支持 WebP （静态图+动图），需要添加
//    implementation 'com.facebook.fresco:animated-webp:2.1.0'
//    implementation 'com.facebook.fresco:webpsupport:2.1.0'
//    // 仅支持 WebP 静态图，需要添加
//    implementation 'com.facebook.fresco:webpsupport:2.1.0'

    //以下依赖是为了使用协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    implementation 'com.google.android.flexbox:flexbox:3.0.0'

    implementation 'org.apache.lucene:lucene-core:4.0.0'
}